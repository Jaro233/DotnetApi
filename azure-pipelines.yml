# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool: 
  name: Default

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: Assembly-Info-NetCore@3
  inputs:
    Path: '$(Build.SourcesDirectory)'
    FileNames: '**/*.csproj'
    InsertAttributes: false
    FileEncoding: 'auto'
    WriteBOM: false
    PackageVersion: '$(Build.SourcesDirectory)'
    LogLevel: 'verbose'
    FailOnWarning: false
    DisableTelemetry: false
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonar-connection-github'
    organization: 'jaro233'
    scannerMode: 'MSBuild'
    projectKey: 'Jaro233_DotnetApi'
    projectName: 'DotnetApi'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      dotnet sonarscanner begin /o:"jaro233" /k:"Jaro233_DotnetApi" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
      dotnet build --no-incremental
      dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
      dotnet sonarscanner end
- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'dotnet_api'
    publishLocation: 'Container'
